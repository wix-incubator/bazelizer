package tools.jvm.mvn;

import com.google.common.collect.Lists;
import com.google.common.io.ByteSource;
import com.google.common.io.CharSource;
import com.google.common.io.Files;
import com.jcabi.xml.XML;
import com.jcabi.xml.XMLDocument;
import org.cactoos.text.TextOf;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;

import java.io.File;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Collections;

import static org.hamcrest.MatcherAssert.assertThat;

@SuppressWarnings("UnstableApiUsage")
public class ActsTest {

    File tmpWorkDir ;

    @Before
    public void tmp() {
        tmpWorkDir = Files.createTempDir();
    }

    @After
    public void rm() {
        //noinspection ResultOfMethodCallIgnored
        tmpWorkDir.delete();
    }

    @Test
    public void generatePom() throws IOException {
        String pom = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                "<project>\n" +
                "<!-- xembler:on -->\n" +
                "    <modelVersion>4.0.0</modelVersion>\n" +
                "    <groupId>BBBB</groupId>\n" +
                "    <artifactId>AAAA</artifactId>\n" +
                "    <version>1.0.0-SNAPSHOT</version>\n" +
                "</project>";

        Project p = Project.builder()
                .artifactId("AAAA")
                .groupId("BBBB")
                .workDir(tmpWorkDir.toPath())
                .pomTemplate(ByteSource.wrap(pom.getBytes()))
                .deps(Lists.newArrayList(new Dep.Simple(null, "xyz", "xyz-aaa", "1.0")))
                .build();

        final Act.Iterative act = new Act.Iterative(
                new Acts.POM()
        );
        final Project accept = act.accept(p);

        XML xml = new XMLDocument(accept.pom().toFile());
        Assert.assertEquals("BBBB",xml.xpath("/project/groupId/text()").get(0).trim());
        Assert.assertEquals("AAAA", xml.xpath("/project/artifactId/text()").get(0).trim());
        Assert.assertEquals(xml.xpath("/project/dependencies/dependency/groupId/text()"), Lists.newArrayList("xyz"));
        Assert.assertEquals(xml.xpath("/project/dependencies/dependency/artifactId/text()"), Lists.newArrayList("xyz-aaa"));
        Assert.assertEquals(xml.xpath("/project/dependencies/dependency/version/text()"), Lists.newArrayList("1.0"));
    }


    @Test
    public void install() throws IOException {
        final Act.Iterative act = new Act.Iterative(
                new Acts.Deps()
        );
        Path jar = java.nio.file.Files.createTempFile("jar", "jar");

        Files.touch(jar.toFile());
        jar.toFile().deleteOnExit();

        final Project p = Project.builder()
                .workDir(tmpWorkDir.toPath())
                .m2Home(tmpWorkDir.toPath())
                .deps(Lists.newArrayList(
                        new Dep.Simple(jar.toFile(), "xyz.com.baz", "xyz-aaa", "1.0")))
                .build();

        act.accept(p);

        final Path resolve = tmpWorkDir.toPath().resolve("repository/xyz/com/baz/xyz-aaa/1.0/");
        Assert.assertTrue(resolve.resolve("xyz-aaa-1.0.jar").toFile().exists());
        Assert.assertTrue(resolve.resolve("xyz-aaa-1.0.pom").toFile().exists());
    }

    @Test
    public void settings() throws IOException {
        final Act.Iterative act = new Act.Iterative(
                new Acts.SettingsXml(new Repositories.Raw(Collections.singleton(
                        new Repositories.Repository().id("x").url("yyy")
                )))
        );

        final Project p = Project.builder()
                .m2Home(tmpWorkDir.toPath())
                .build();

        act.accept(p);

        final Path xml = p.m2Home().resolve("settings.xml");
        final String xmlStr = new TextOf(xml.toFile()).asString();

        String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                "<!-- AUTOGENERATED SETTINGS XML FILE. -->\n" +
                "<!-- DO NOT EDIT -->\n" +
                "<settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">\n" +
                "\n" +
                "    <localRepository>" + tmpWorkDir.toPath().resolve("repository") + "</localRepository>\n" +
                "\n" +
                "    <profiles>\n" +
                "        <profile>\n" +
                "            <id>bazelizer</id>\n" +
                "            <repositories>\n" +
                "                <repository>\n" +
                "\n" +
                "                    <id>x</id>\n" +
                "                    <name></name>\n" +
                "                    <url>yyy</url>\n" +
                "                </repository>\n" +
                "            </repositories>\n" +
                "            <pluginRepositories>\n" +
                "                <pluginRepository>\n" +
                "                    <id>x</id>\n" +
                "                    <name></name>\n" +
                "                    <url>yyy</url>\n" +
                "                </pluginRepository>\n" +
                "            </pluginRepositories>\n" +
                "        </profile>\n" +
                "    </profiles>\n" +
                "\n" +
                "    <activeProfiles>\n" +
                "        <activeProfile>bazelizer</activeProfile>\n" +
                "    </activeProfiles>\n" +
                "</settings>";
        Assert.assertEquals(expected, xmlStr);
    }

    @SuppressWarnings("UnstableApiUsage")
    @Test
    public void xe() throws IOException {

        final String onComment = "<!-- xembler:on -->\n";

        String xml = "<project xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n" +
                onComment +
                "    <modelVersion>4.0.0</modelVersion>\n" +
                "    <groupId>com.mavenizer.examples.api</groupId>\n" +
                "    <artifactId>myapi-parent</artifactId>\n" +
                "    <version>1.0.0-SNAPSHOT</version>\n" +
                "    <parent>\n" +
                "        <groupId>com.mavenizer.examples.api</groupId>\n" +
                "        <artifactId>myapi-parent</artifactId>\n" +
                "        <version>1.0.0-SNAPSHOT</version>\n" +
                "        <relativePath>{{ relative_path }}</relativePath>\n" +
                "    </parent>\n" +
                "    <packaging>pom</packaging>\n" +
                "        <dependencies>\n" +
                "           <dependency>\n" +
                "              <groupId>javax.xml.bind</groupId>\n" +
                "              <artifactId>jaxb-api</artifactId>\n" +
                "           </dependency>\n" +
                "        </dependencies>\n" +
                "</project>";

        String expected = "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n" +
                "<project xmlns:xhtml=\"http://www.w3.org/1999/xhtml\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n" +
                onComment +
                "    <modelVersion>4.0.0</modelVersion>\n" +
                "    <groupId>com.mavenizer.examples.api</groupId>\n" +
                "    <artifactId>myapi-parent</artifactId>\n" +
                "    <version>1.0.0-SNAPSHOT</version>\n" +
                "    <parent>\n" +
                "        <groupId>com.mavenizer.examples.api</groupId>\n" +
                "        <artifactId>myapi-parent</artifactId>\n" +
                "        <version>1.0.0-SNAPSHOT</version>\n" +
                "        <relativePath>../bar.xml</relativePath>\n" +
                "    </parent>\n" +
                "    <packaging>pom</packaging>\n" +
                "        <dependencies>\n" +
                "           \n" +
                "        <dependency>\n" +
                "            <!--source-of: /x/y/z -->\n" +
                "            <groupId>xxx</groupId>\n" +
                "            <artifactId>yyy</artifactId>\n" +
                "            <version>zzz</version>\n" +
                "            <scope>compile</scope>\n" +
                "        </dependency>\n" +
                "    </dependencies>\n" +
                "</project>\n";


        final Project p = newProject(xml);
        Acts.POM pom = new Acts.POM();
        final Project newProj = pom.accept(p);
        final String resXML = new TextOf(newProj.pom()).asString();
        Assert.assertEquals(expected, resXML);
    }

    private static Project newProject(String xml) {
        final Path workDir = Files.createTempDir().toPath();
        return Project.builder()
                .workDir(workDir)
                .pomTemplate(CharSource.wrap(xml).asByteSource(StandardCharsets.UTF_8))
                .deps(Lists.newArrayList(
                        new Dep.Simple(new File("/x/y/z"), "xxx", "yyy", "zzz")
                ))
                .parentPom(workDir.resolve("bar.xml"))
                .build();
    }


    @Test
    public void xeDeps() throws IOException {
        String xml = "<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n" +
                "         xmlns=\"http://maven.apache.org/POM/4.0.0\"\n" +
                "         xmlns:xe=\"http://www.w3.org/1999/xhtml\"\n" +
                "         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\"\n" +
                "         >\n" +
                "    <!-- xembler:on  no-drop-deps-first  -->\n" +
                "\n" +
                "    <modelVersion>4.0.0</modelVersion>\n" +
                "    <!--suppress MavenRedundantGroupId -->\n" +
                "    <groupId>com.mavenizer.examples.api</groupId>\n" +
                "    <artifactId>myapi</artifactId>\n" +
                "    <version>1.0.0-SNAPSHOT</version>\n" +
                "\n" +
                "    <parent>\n" +
                "        <groupId>com.mavenizer.examples.api</groupId>\n" +
                "        <artifactId>myapi-parent</artifactId>\n" +
                "        <version>1.0.0-SNAPSHOT</version>\n" +
                "        <relativePath>PLACEHOLDER</relativePath>\n" +
                "    </parent>\n" +
                "\n" +
                "    <dependencies>\n" +
                "        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->\n" +
                "        <dependency>\n" +
                "            <groupId>com.google.guava</groupId>\n" +
                "            <artifactId>guava</artifactId>\n" +
                "            <version>30.0-jre</version>\n" +
                "        </dependency>\n" +
                "        <!--\n" +
                "            My JAXB bindings, can be passed via Bazel\n" +
                "         -->\n" +
                "        <dependency>\n" +
                "            <groupId>javax.xml.bind</groupId>\n" +
                "            <artifactId>jaxb-api</artifactId>\n" +
                "        </dependency>\n" +
                "        <dependency>\n" +
                "            <groupId>com.sun.xml.bind</groupId>\n" +
                "            <artifactId>jaxb-core</artifactId>\n" +
                "        </dependency>\n" +
                "        <dependency>\n" +
                "            <groupId>com.sun.xml.bind</groupId>\n" +
                "            <artifactId>jaxb-impl</artifactId>\n" +
                "        </dependency>\n" +
                "        <dependency>\n" +
                "            <groupId>org.jvnet.jaxb2_commons</groupId>\n" +
                "            <artifactId>jaxb2-basics-runtime</artifactId>\n" +
                "        </dependency>\n" +
                "\n" +
                "        <dependency>\n" +
                "            <groupId>junit</groupId>\n" +
                "            <artifactId>junit</artifactId>\n" +
                "            <version>4.13.1</version>\n" +
                "            <scope>test</scope>\n" +
                "        </dependency>\n" +
                "    </dependencies>\n" +
                "\n" +
                "\n" +
                "    <build>\n" +
                "        <plugins>\n" +
                "\n" +
                "            <plugin>\n" +
                "                <groupId>de.qaware.maven</groupId>\n" +
                "                <artifactId>go-offline-maven-plugin</artifactId>\n" +
                "                <version>1.2.7</version>\n" +
                "                <configuration>\n" +
                "                    <dynamicDependencies>\n" +
                "                        <DynamicDependency>\n" +
                "                            <groupId>org.jvnet.jaxb2.maven2</groupId>\n" +
                "                            <artifactId>maven-jaxb2-plugin</artifactId>\n" +
                "                            <version>0.14.0</version>\n" +
                "                            <repositoryType>PLUGIN</repositoryType>\n" +
                "                        </DynamicDependency>\n" +
                "\n" +
                "                        <DynamicDependency>\n" +
                "                            <groupId>net.java.dev.jaxb2-commons</groupId>\n" +
                "                            <artifactId>jaxb-fluent-api</artifactId>\n" +
                "                            <version>2.1.8</version>\n" +
                "                            <repositoryType>PLUGIN</repositoryType>\n" +
                "                        </DynamicDependency>\n" +
                "\n" +
                "                        <DynamicDependency>\n" +
                "                            <groupId>org.jvnet.jaxb2_commons</groupId>\n" +
                "                            <artifactId>jaxb2-basics</artifactId>\n" +
                "                            <version>1.11.1</version>\n" +
                "                            <repositoryType>PLUGIN</repositoryType>\n" +
                "                        </DynamicDependency>\n" +
                "                    </dynamicDependencies>\n" +
                "                </configuration>\n" +
                "            </plugin>\n" +
                "\n" +
                "            <plugin>\n" +
                "                <groupId>org.jvnet.jaxb2.maven2</groupId>\n" +
                "                <artifactId>maven-jaxb2-plugin</artifactId>\n" +
                "                <version>0.14.0</version>\n" +
                "                <executions>\n" +
                "                    <execution>\n" +
                "                        <goals>\n" +
                "                            <goal>generate</goal>\n" +
                "                        </goals>\n" +
                "                    </execution>\n" +
                "                </executions>\n" +
                "                <configuration>\n" +
                "                    <extension>true</extension>\n" +
                "                    <args>\n" +
                "                        <arg>-Xfluent-api</arg>\n" +
                "                        <arg>-XtoString</arg>\n" +
                "                    </args>\n" +
                "                    <plugins>\n" +
                "                        <plugin>\n" +
                "                            <groupId>net.java.dev.jaxb2-commons</groupId>\n" +
                "                            <artifactId>jaxb-fluent-api</artifactId>\n" +
                "                            <version>2.1.8</version>\n" +
                "                        </plugin>\n" +
                "                        <plugin>\n" +
                "                            <groupId>org.jvnet.jaxb2_commons</groupId>\n" +
                "                            <artifactId>jaxb2-basics</artifactId>\n" +
                "                            <version>1.11.1</version>\n" +
                "                        </plugin>\n" +
                "                    </plugins>\n" +
                "                </configuration>\n" +
                "            </plugin>\n" +
                "            <plugin>\n" +
                "                <groupId>org.apache.maven.plugins</groupId>\n" +
                "                <artifactId>maven-compiler-plugin</artifactId>\n" +
                "                <configuration>\n" +
                "                    <source>1.6</source>\n" +
                "                    <target>1.6</target>\n" +
                "                </configuration>\n" +
                "            </plugin>\n" +
                "        </plugins>\n" +
                "    </build>\n" +
                "</project>";

        String expected = "";

        final Project p = newProject(xml);
        Acts.POM pom = new Acts.POM();
        final Project newProj = pom.accept(p);
        final String resXML = new TextOf(newProj.pom()).asString();
        System.out.println(resXML);
        Assert.assertEquals(expected, resXML);
    }
}
