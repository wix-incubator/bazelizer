package(default_visibility = ["//visibility:public"])

load("//:macros.bzl", "sources", "test_sources")
load("//:spec2_macros.bzl", "specs2_unit_test")
load("@io_bazel_rules_scala//scala:scala.bzl", "scala_binary", "scala_test_suite")
load("//:maven_binary_tool.bzl", _maven_bin_name = "MAVEN_BINARY_NAME")

sources()

test_sources()

scala_binary(
    name = "mvn",
    srcs = [
        ":sources",
    ],
    data = ["@%s//:%s" % (_maven_bin_name, _maven_bin_name)],
    jvm_flags = [
        "--illegal-access=permit",
        "-Dtools.jvm.mvn.MavenBin=\"%s\"" % _maven_bin_name,
    ],
    main_class = "mvn.Cli",
    deps = [
        "@bazel_tools//tools/java/runfiles",
        "@bazelizer_deps//:com_github_scopt_scopt_2_12",
        "@bazelizer_deps//:com_google_code_gson_gson",
        "@bazelizer_deps//:com_google_guava_guava",
        "@bazelizer_deps//:org_apache_maven_maven_model",
        "@bazelizer_deps//:org_apache_maven_shared_maven_invoker",
        "@bazelizer_deps//:org_codehaus_plexus_plexus_utils",
        "@bazelizer_deps//:org_scala_lang_scala_library",
        "@com_google_code_gson_gson",
        "@org_apache_maven_maven_model",
        "@org_apache_maven_shared_maven_invoker",
        "@org_codehaus_plexus_plexus_utils",
    ],
)

#specs2_unit_test(
#    name = "mvn_test",
#    srcs = [
#        ":test_sources",
#    ],
#    runtime_deps = [
#    ],
#    deps = [
#        ":mvn",
#    ],
#)
